name: GraalVM Native Image builds
on:
  # release:
  #   types: [created]
  push:
    branches:
      - develop
    tags:
      - '*'
jobs:
  build:
    name: Build binaries with ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest] # windows-latest, 
    steps:
      - name: Check for tag
        run: |
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "This is a tagged push."
          else
            echo "This is not a tagged push."
            exit 1
          fi

      - uses: actions/checkout@v4

      # - uses: graalvm/setup-graalvm@v1
      #   with:
      #     java-version: '21'
      #     distribution: 'graalvm'
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     native-image-job-reports: 'true'

      # - name: Prepare java
      #   uses: actions/setup-java@v3
      #   with:
      #     distribution: 'temurin'
      #     java-version: '17'

      # - name: Install clojure tools
      #   uses: DeLaGuardo/setup-clojure@12.1
      #   with:
      #     cli: 1.11.1.1413
      #     # lein: 2.10.0

      - name: Get version from package.json
        id: package_version
        run: echo "LATEST_VERSION=$(jq -r '.version' package.json)" >> $GITHUB_ENV

      # - name: Build jar and native
      #   run: |
      #     clojure -T:build uber :version '"${{ env.LATEST_VERSION }}"'
      #     cp target/dartclojure*.jar dartclojure.jar
      #     chmod +x compile.sh
      #     ./compile.sh

      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: dartclojure-${{ matrix.os }}
          path: dartclojure*

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.LATEST_VERSION }}
          release_name: Release ${{ env.LATEST_VERSION }}
          draft: true
          prerelease: false
      - name: Attach binaries to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -x
          assets=()
          assets+=("-a" "dartclojure")
          hub release edit "${assets[@]}" -m "Release ${{env.LATEST_VERSION}}" ${{env.LATEST_VERSION}} # add the assets to the Release
