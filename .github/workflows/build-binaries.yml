name: GraalVM Native Image builds
on:
  # release:
  #   types: [created]
  push:
    branches:
      - develop
jobs:
  build:
    name: Build binaries with ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest] # windows-latest, 
    steps:
      - uses: actions/checkout@v4

      # - uses: graalvm/setup-graalvm@v1
      #   with:
      #     java-version: '21'
      #     distribution: 'graalvm'
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     native-image-job-reports: 'true'

      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@12.1
        with:
          # Install just one or all simultaneously
          # The value must indicate a particular version of the tool, or use 'latest'
          # to always provision the latest version
          # cli: 1.11.1.1413
          lein: 2.10.0

      # - name: Get latest release version
      #   id: latest_version
      #   run: |
      #     if [[ "$RUNNER_OS" == "Windows_NT" ]]; then
      #       VERSION=$(Invoke-RestMethod -Uri "https://api.github.com/repos/D00mch/DartClojure/releases/latest" | Select-Object -ExpandProperty tag_name)
      #     else
      #       VERSION=$(curl --silent "https://api.github.com/repos/D00mch/DartClojure/releases/latest" | jq -r .tag_name)
      #     fi
      #     echo "LATEST_VERSION=$VERSION" >> $GITHUB_ENV
      #   shell: bash
      #   env:
      #     RUNNER_OS: ${{ runner.os }}

      - name: Build jar and native
        run: |
          # clojure -T:build uber :version '"${{ env.LATEST_VERSION }}"'
          lein uberjar
          cp target/dartclojure*stand*.jar dartclojure.jar
          chmod +x compile.sh
          ./compile.sh

      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: dartclojure-${{ matrix.os }}
          path: dartclojure*

#       - name: Create Release and Upload Binaries
#         uses: gh-actions/gh-release@v1
#         with:
#           tag_name: ${{ github.ref }}
#           name: Release ${{ github.ref }}
#           body: Description of the release
#           draft: false
#           prerelease: false
#           files: ./dartclojure*
